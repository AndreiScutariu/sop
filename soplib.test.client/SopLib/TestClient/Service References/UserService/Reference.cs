//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestClient.UserService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://services.lib.sop/", ConfigurationName="UserService.UserService")]
    public interface UserService {
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://services.lib.sop/UserService/addRequest", ReplyAction="http://services.lib.sop/UserService/addResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        TestClient.UserService.addResponse add(TestClient.UserService.addRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.lib.sop/UserService/addRequest", ReplyAction="http://services.lib.sop/UserService/addResponse")]
        System.Threading.Tasks.Task<TestClient.UserService.addResponse> addAsync(TestClient.UserService.addRequest request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://services.lib.sop/UserService/getRequest", ReplyAction="http://services.lib.sop/UserService/getResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        TestClient.UserService.getResponse get(TestClient.UserService.getRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.lib.sop/UserService/getRequest", ReplyAction="http://services.lib.sop/UserService/getResponse")]
        System.Threading.Tasks.Task<TestClient.UserService.getResponse> getAsync(TestClient.UserService.getRequest request);
        
        // CODEGEN: Parameter 'arg0' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://services.lib.sop/UserService/updateRequest", ReplyAction="http://services.lib.sop/UserService/updateResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TestClient.UserService.updateResponse update(TestClient.UserService.updateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.lib.sop/UserService/updateRequest", ReplyAction="http://services.lib.sop/UserService/updateResponse")]
        System.Threading.Tasks.Task<TestClient.UserService.updateResponse> updateAsync(TestClient.UserService.updateRequest request);
        
        // CODEGEN: Parameter 'arg0' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://services.lib.sop/UserService/deleteRequest", ReplyAction="http://services.lib.sop/UserService/deleteResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TestClient.UserService.deleteResponse delete(TestClient.UserService.deleteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.lib.sop/UserService/deleteRequest", ReplyAction="http://services.lib.sop/UserService/deleteResponse")]
        System.Threading.Tasks.Task<TestClient.UserService.deleteResponse> deleteAsync(TestClient.UserService.deleteRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.lib.sop/")]
    public partial class userDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long idField;
        
        private bool idFieldSpecified;
        
        private string nameField;
        
        private roleDto[] rolesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
                this.RaisePropertyChanged("idSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("roles", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=2)]
        public roleDto[] roles {
            get {
                return this.rolesField;
            }
            set {
                this.rolesField = value;
                this.RaisePropertyChanged("roles");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.lib.sop/")]
    public partial class roleDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long idField;
        
        private bool idFieldSpecified;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
                this.RaisePropertyChanged("idSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="add", WrapperNamespace="http://services.lib.sop/", IsWrapped=true)]
    public partial class addRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.lib.sop/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TestClient.UserService.userDto arg0;
        
        public addRequest() {
        }
        
        public addRequest(TestClient.UserService.userDto arg0) {
            this.arg0 = arg0;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="addResponse", WrapperNamespace="http://services.lib.sop/", IsWrapped=true)]
    public partial class addResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.lib.sop/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long @return;
        
        public addResponse() {
        }
        
        public addResponse(long @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="get", WrapperNamespace="http://services.lib.sop/", IsWrapped=true)]
    public partial class getRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.lib.sop/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long arg0;
        
        public getRequest() {
        }
        
        public getRequest(long arg0) {
            this.arg0 = arg0;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getResponse", WrapperNamespace="http://services.lib.sop/", IsWrapped=true)]
    public partial class getResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.lib.sop/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TestClient.UserService.userDto @return;
        
        public getResponse() {
        }
        
        public getResponse(TestClient.UserService.userDto @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="update", WrapperNamespace="http://services.lib.sop/", IsWrapped=true)]
    public partial class updateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.lib.sop/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long arg0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.lib.sop/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TestClient.UserService.userDto arg1;
        
        public updateRequest() {
        }
        
        public updateRequest(long arg0, TestClient.UserService.userDto arg1) {
            this.arg0 = arg0;
            this.arg1 = arg1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="updateResponse", WrapperNamespace="http://services.lib.sop/", IsWrapped=true)]
    public partial class updateResponse {
        
        public updateResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="delete", WrapperNamespace="http://services.lib.sop/", IsWrapped=true)]
    public partial class deleteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.lib.sop/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long arg0;
        
        public deleteRequest() {
        }
        
        public deleteRequest(long arg0) {
            this.arg0 = arg0;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="deleteResponse", WrapperNamespace="http://services.lib.sop/", IsWrapped=true)]
    public partial class deleteResponse {
        
        public deleteResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface UserServiceChannel : TestClient.UserService.UserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<TestClient.UserService.UserService>, TestClient.UserService.UserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TestClient.UserService.addResponse TestClient.UserService.UserService.add(TestClient.UserService.addRequest request) {
            return base.Channel.add(request);
        }
        
        public long add(TestClient.UserService.userDto arg0) {
            TestClient.UserService.addRequest inValue = new TestClient.UserService.addRequest();
            inValue.arg0 = arg0;
            TestClient.UserService.addResponse retVal = ((TestClient.UserService.UserService)(this)).add(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TestClient.UserService.addResponse> TestClient.UserService.UserService.addAsync(TestClient.UserService.addRequest request) {
            return base.Channel.addAsync(request);
        }
        
        public System.Threading.Tasks.Task<TestClient.UserService.addResponse> addAsync(TestClient.UserService.userDto arg0) {
            TestClient.UserService.addRequest inValue = new TestClient.UserService.addRequest();
            inValue.arg0 = arg0;
            return ((TestClient.UserService.UserService)(this)).addAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TestClient.UserService.getResponse TestClient.UserService.UserService.get(TestClient.UserService.getRequest request) {
            return base.Channel.get(request);
        }
        
        public TestClient.UserService.userDto get(long arg0) {
            TestClient.UserService.getRequest inValue = new TestClient.UserService.getRequest();
            inValue.arg0 = arg0;
            TestClient.UserService.getResponse retVal = ((TestClient.UserService.UserService)(this)).get(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TestClient.UserService.getResponse> TestClient.UserService.UserService.getAsync(TestClient.UserService.getRequest request) {
            return base.Channel.getAsync(request);
        }
        
        public System.Threading.Tasks.Task<TestClient.UserService.getResponse> getAsync(long arg0) {
            TestClient.UserService.getRequest inValue = new TestClient.UserService.getRequest();
            inValue.arg0 = arg0;
            return ((TestClient.UserService.UserService)(this)).getAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TestClient.UserService.updateResponse TestClient.UserService.UserService.update(TestClient.UserService.updateRequest request) {
            return base.Channel.update(request);
        }
        
        public void update(long arg0, TestClient.UserService.userDto arg1) {
            TestClient.UserService.updateRequest inValue = new TestClient.UserService.updateRequest();
            inValue.arg0 = arg0;
            inValue.arg1 = arg1;
            TestClient.UserService.updateResponse retVal = ((TestClient.UserService.UserService)(this)).update(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TestClient.UserService.updateResponse> TestClient.UserService.UserService.updateAsync(TestClient.UserService.updateRequest request) {
            return base.Channel.updateAsync(request);
        }
        
        public System.Threading.Tasks.Task<TestClient.UserService.updateResponse> updateAsync(long arg0, TestClient.UserService.userDto arg1) {
            TestClient.UserService.updateRequest inValue = new TestClient.UserService.updateRequest();
            inValue.arg0 = arg0;
            inValue.arg1 = arg1;
            return ((TestClient.UserService.UserService)(this)).updateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TestClient.UserService.deleteResponse TestClient.UserService.UserService.delete(TestClient.UserService.deleteRequest request) {
            return base.Channel.delete(request);
        }
        
        public void delete(long arg0) {
            TestClient.UserService.deleteRequest inValue = new TestClient.UserService.deleteRequest();
            inValue.arg0 = arg0;
            TestClient.UserService.deleteResponse retVal = ((TestClient.UserService.UserService)(this)).delete(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TestClient.UserService.deleteResponse> TestClient.UserService.UserService.deleteAsync(TestClient.UserService.deleteRequest request) {
            return base.Channel.deleteAsync(request);
        }
        
        public System.Threading.Tasks.Task<TestClient.UserService.deleteResponse> deleteAsync(long arg0) {
            TestClient.UserService.deleteRequest inValue = new TestClient.UserService.deleteRequest();
            inValue.arg0 = arg0;
            return ((TestClient.UserService.UserService)(this)).deleteAsync(inValue);
        }
    }
}
